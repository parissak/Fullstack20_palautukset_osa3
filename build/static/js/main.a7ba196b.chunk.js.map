{"version":3,"sources":["components/FilterForm.js","components/PersonForm.js","components/Persons.js","components/Notification.js","components/Error.js","services/persons.js","App.js","index.js"],"names":["FilterForm","value","change","onChange","PersonForm","props","onSubmit","addPerson","newName","handleNewName","newNumber","handleNewNumber","type","Persons","listPersons","handleDeletePerson","map","person","key","id","name","number","onClick","Notification","message","style","color","fontSize","padding","marginBottom","Error","baseUrl","axios","get","then","response","data","personObject","post","personId","delete","put","App","useState","persons","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","success","setSuccessfull","failure","setFailure","useEffect","personService","showPersons","filter","toLowerCase","includes","event","target","preventDefault","window","confirm","oldP","find","p","changedP","returnedPerson","setTimeout","createdObject","concat","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7ba196b.chunk.js","sourcesContent":["import React from 'react'\n\nconst FilterForm = ({ value, change }) => {\n    return (\n        <div>filter shown with\n            <input value={value} onChange={change} />\n        </div>\n    )\n}\n\nexport default FilterForm","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n      <div>\n        <form onSubmit={props.addPerson}>\n          <div> name: <input value={props.newName} onChange={props.handleNewName} /></div>\n          <div> number: <input value={props.newNumber} onChange={props.handleNewNumber} /></div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n  export default PersonForm","import React from 'react'\n\nconst Persons = ({ listPersons, handleDeletePerson }) => {\n    return (\n        <ul> {listPersons.map(person =>\n            <li key={person.id}>  {person.name} {person.number}\n                <button onClick={() => handleDeletePerson(person)}> delete</button>\n            </li>\n\n        )}\n        </ul >\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message }) => {\n    const successfull = {\n        color: 'green',\n        fontSize: 20,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div style={successfull}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst Error = ({ message }) => {\n    const unsuccessfull = {\n        color: 'red',\n        fontSize: 20,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div style={unsuccessfull}>\n            {message}\n        </div>\n    )\n}\n\nexport default Error","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (personObject) => {\n    const request = axios.post(baseUrl, personObject)\n    return request.then(response => response.data)\n}\n\nconst update = (personObject) => {\n    const request = axios.put(baseUrl + '/' + personObject.id, personObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (personId) => {\n    const request = axios.delete(baseUrl + '/' + personId)\n    return request.then(response => response.data)\n}\n\nexport default {getAll, create, remove, update}\n","import React, { useState, useEffect } from 'react'\nimport FilterForm from './components/FilterForm'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\nimport personService from './services/persons'\nimport './index.css'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [newFilter, setNewFilter] = useState('')\n    const [success, setSuccessfull] = useState(null)\n    const [failure, setFailure] = useState(null)\n\n    const handleNewName = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNewNumber = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const deletePerson = (person) => {\n        if (window.confirm(`Delete ${person.name}?`)) {\n            personService.remove(person.id)\n                .then(() => {\n                    setPersons(persons.filter(p => p.id !== person.id))\n                    setSuccessfull(`${person.name} deleted successfully`)\n                    setTimeout(() => {\n                        setSuccessfull(null)\n                    }, 2500)\n                })\n        }\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n\n        if (persons.map(person => person.name).includes(newName)) {\n            if (window.confirm(`${newName} is already added to the phonebook, \n                replace the old number with a new one?`)) {\n                const oldP = persons.find(p => p.name === newName)\n                const changedP = { ...oldP, number: newNumber }\n\n                personService.update(changedP).then(returnedPerson => {\n                    if (!returnedPerson) {\n                        setFailure(`${newName} has already been removed`)\n                        setPersons(persons.filter(p => p.id !== oldP.id))\n                        setTimeout(() => {\n                            setFailure(null)\n                        }, 2500)\n                    } else {\n                        setPersons(persons.map(p => p.id !== oldP.id ? p : returnedPerson))\n                        setNewName('')\n                        setNewNumber('')\n\n                        setSuccessfull(`${newName}'s number changed successfully`)\n                        setTimeout(() => {\n                            setSuccessfull(null)\n                        }, 2500)\n                    }\n                })\n            }\n        } else {\n            const personObject = {\n                name: newName,\n                number: newNumber\n            }\n            personService.create(personObject).then(createdObject => {\n                setPersons(persons.concat(createdObject))\n                setNewName('')\n                setNewNumber('')\n            }).then(() => {\n                setSuccessfull(`${newName} added successfully`)\n                setTimeout(() => {\n                    setSuccessfull(null)\n                }, 2500)\n            })\n                .catch(error => {\n                    setFailure(`${error.response.data.error}`)\n                    setTimeout(() => {\n                        setFailure(null)\n                    }, 2500)\n                })\n        }\n    }\n\n    const handleFilterInput = (event) => {\n        setNewFilter(event.target.value)\n    }\n\n    useEffect(() => {\n        personService.getAll()\n            .then(persons => {\n                setPersons(persons)\n            })\n    }, [])\n\n    let showPersons = persons\n    if (newFilter !== '') {\n        showPersons = persons.filter(person => person.name.toLowerCase()\n            .includes(newFilter.toLowerCase()))\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Error message={failure} />\n            <Notification message={success} />\n\n            <FilterForm value={newFilter} change={handleFilterInput} />\n\n            <h3>add a new number</h3>\n            <PersonForm addPerson={addPerson} newName={newName} handleNewName={handleNewName}\n                newNumber={newNumber} handleNewNumber={handleNewNumber} />\n\n            <h3>Numbers</h3>\n            <Persons listPersons={showPersons} handleDeletePerson={deletePerson} />\n        </div >\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}